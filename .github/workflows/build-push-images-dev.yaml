name: Build and Push Images (DEV)
on:
  pull_request:
  workflow_dispatch:

jobs:
    build-push-docs:
        name: Build and Push Zane docs dev images
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Cache pnpm dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.OS }}-pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.OS }}-pnpm-cache-
            - name: Build docs with node
              run: |
                  npm install -g pnpm@8
                  pnpm install --frozen-lockfile
                  FORCE_COLOR=true pnpm run build
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ghcr.io/zane-ops/docs:pr-${{ github.event.pull_request.number }},ghcr.io/zane-ops/docs:${{ github.sha }}
                  cache-from: |
                      type=registry,ref=ghcr.io/zane-ops/docs:pr-${{ github.event.pull_request.number }}
                      type=registry,ref=ghcr.io/zane-ops/docs:latest
                  cache-to: type=inline
    deploy:
        runs-on: ubuntu-latest
        name: Deploy
        needs: build-push-docs
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Get commit message
            id: get-commit
            run: echo "commit_message=$(git log -2 --pretty=format:%s)" >> $GITHUB_OUTPUT

          - name: Bypass Cloudflare for GitHub Action
            uses: xiaotianxt/bypass-cloudflare-for-github-action@v1.1.1
            with:
              cf_zone_id: ${{ secrets.CF_ZONE_ID }}
              cf_api_token: ${{ secrets.CF_API_TOKEN }}
          - name: Deploy to ZaneOps
            run: |
              curl -f -o /dev/null --fail \
               -H "CF-Access-Client-Id: ${{ secrets.CF_CLIENT_ID }}" \
               -H "CF-Access-Client-Secret: ${{ secrets.CF_CLIENT_SECRET }}" \
               -X PUT ${{ secrets.STAGING_DEPLOY_WEBHOOK_URL }} \
               --data '{
                   "commit_message": "${{ steps.get-commit.outputs.commit_message }}",
                   "new_image": "ghcr.io/zane-ops/docs:${{ github.sha }}"
                 }'

