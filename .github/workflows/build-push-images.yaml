name: Build and Push Images
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches:
            - main
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build-push-docs:
        name: Build and Push Zane Documentation
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Cache pnpm dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.OS }}-pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.OS }}-pnpm-cache-
            - name: Build docs with node
              run: |
                  npm install -g pnpm@8
                  pnpm install --frozen-lockfile
                  FORCE_COLOR=true pnpm run build
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ghcr.io/zane-ops/docs:latest,ghcr.io/zane-ops/docs:${{ github.sha }}
                  cache-from: |
                      type=registry,ref=ghcr.io/zane-ops/docs:latest
                  cache-to: type=inline
            
            # - name: setup bun
            #   uses: oven-sh/setup-bun@v2
            #   with:
            #     bun-version: latest
            
            # - name: Deploy to Zaneops
            #   run: bun run deploy-to-zaneops.ts 
            #   env:
            #       DEPLOY_WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
            #       CF_CLIENT_ID: ${{ secrets.CF_CLIENT_ID }}
            #       CF_CLIENT_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
            #       COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
            #       SERVICE_IMAGE: ghcr.io/zane-ops/docs:${{ github.sha }} 

            - name: Deploy to Zaneops
              uses: zane-ops/auto-deploy-action@v2.1
              with:
                SERVICE_IMAGE: ghcr.io/zane-ops/docs:${{ github.sha }}
                DEPLOY_WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
                COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
                EXTRA_HEADERS: '{ "CF-Access-Client-Id": "${{ secrets.CF_CLIENT_ID }}", "CF-Access-Client-Secret": "${{ secrets.CF_CLIENT_SECRET }}" }'